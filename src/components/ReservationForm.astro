---
import { t } from "../utils/i18n";
import { getLangFromUrl } from "../utils/i18n";
import Button from "./Button.astro";
const lang = getLangFromUrl(Astro.url);
---

<div class="max-w-2xl mx-auto pb-5 px-5">
  <h1 class="text-center text-5xl mt-10 font-cormorant">
    {t(lang, "reservation.title")}
  </h1>

  <form class="space-y-6">
    <div>
      <label for="date" class="block text-sm font-medium text-gray-700"
        >{t(lang, "reservation.form.date")}</label
      >
      <input
        type="date"
        id="date"
        name="date"
        class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 px-4 py-2 font-serif"
        required
      />
    </div>

    <div>
      <label for="time" class="block text-sm font-medium text-gray-700"
        >{t(lang, "reservation.form.time")}</label
      >
      <select
        id="time"
        name="time"
        class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 px-4 py-2 font-serif"
        required
      >
        {
          Object.entries(t(lang, "reservation.form.timeOptions")).map(
            ([value, label]) => <option value={value}>{label}</option>
          )
        }
      </select>
    </div>

    <div>
      <label for="guests" class="block text-sm font-medium text-gray-700"
        >{t(lang, "reservation.form.guests")}</label
      >
      <select
        id="guests"
        name="guests"
        class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 px-4 py-2 font-serif"
        required
      >
        {
          Object.entries(t(lang, "reservation.form.guestsOptions")).map(
            ([value, label]) => <option value={value}>{label}</option>
          )
        }
      </select>
    </div>

    <div>
      <label for="name" class="block text-sm font-medium text-gray-700"
        >{t(lang, "reservation.form.name")}</label
      >
      <input
        type="text"
        id="name"
        name="name"
        class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 px-4 py-2 font-serif"
        required
      />
    </div>

    <div>
      <label for="phone" class="block text-sm font-medium text-gray-700"
        >{t(lang, "reservation.form.phone")}</label
      >
      <input
        type="tel"
        id="phone"
        name="phone"
        class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 px-4 py-2 font-serif"
        required
      />
    </div>

    <div>
      <label for="email" class="block text-sm font-medium text-gray-700"
        >{t(lang, "reservation.form.email")}</label
      >
      <input
        type="email"
        id="email"
        name="email"
        class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 px-4 py-2 font-serif"
        required
      />
    </div>

    <div>
      <label for="message" class="block text-sm font-medium text-gray-700"
        >{t(lang, "reservation.form.message")}</label
      >
      <textarea
        id="message"
        name="message"
        rows="3"
        class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 px-4 py-2 font-serif"
      ></textarea>
    </div>

    <Button
      type="submit"
    >
      {t(lang, "reservation.form.submit")}
    </Button>
  </form>
</div>

<script>
  const form = document.querySelector("form") as HTMLFormElement;
  const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement;
  
  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    
    // Désactiver le bouton pendant l'envoi
    submitButton.disabled = true;
    submitButton.textContent = "Envoi en cours...";
    
    try {
      const formData = new FormData(form);
      const data = {
        date: formData.get('date'),
        time: formData.get('time'),
        guests: formData.get('guests'),
        name: formData.get('name'),
        phone: formData.get('phone'),
        email: formData.get('email'),
        message: formData.get('message')
      };
      
      const response = await fetch('/api/reservation', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      });
      
      const result = await response.json();
      
      if (result.success) {
        alert(result.message);
        form.reset();
      } else {
        alert(result.message);
      }
    } catch (error) {
      alert("Une erreur s'est produite. Veuillez réessayer ou nous contacter directement.");
      console.error('Erreur:', error);
    } finally {
      // Réactiver le bouton
      submitButton.disabled = false;
      submitButton.textContent = "Envoyer la réservation";
    }
  });
</script>
